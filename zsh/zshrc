# user setting
if [ -e ${HOME}/.setting ]; then
    source ${HOME}/.setting
fi

source $HOME/.slimzsh/slim.zsh

for config_file (${ZDOTDIR:-$HOME}/.zsh/zsh.d/*.zsh(N)) source $config_file

stty -ixon

unsetopt correct_all
unsetopt BEEP

# use cat
bindkey "^[[1;2D" backward-word
bindkey "^[[1;2C" forward-word
bindkey "^[[1;2A" history-substring-search-up
bindkey "^[[1;2B" history-substring-search-down
bindkey "Î©" undo
bindkey "^[[A" up-line-or-history
bindkey "^[[B" down-line-or-history
bindkey "^H" backward-kill-word

export BAT_CONFIG_PATH=$HOME/.batconfig
export HISFILE=$HOME/.zsh_history

source $HOME/.zplug/init.zsh

zplug "Tarrasch/zsh-autoenv"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-history-substring-search"

if ! zplug check --verbose; then
    zplug install
fi

zplug load


[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export CPATH=${CPATH}:"${CONDA_PREFIX}/include"

export PATH=$PATH:$HOME/.local/bin

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$(${HOME}'/conda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "${HOME}/conda/etc/profile.d/conda.sh" ]; then
        . "${HOME}/conda/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/conda/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# register direnv hook after conda initializing
if [ -x "$(command -v direnv)" ]; then
    eval "$(direnv hook zsh)"
fi

if [ -e $HOME/.cargo/env ]; then
    source $HOME/.cargo/env
fi

export COLORTERM="truecolor"

if [ -x "$(command -v hx)" ]; then
    export EDITOR="hx"
fi
